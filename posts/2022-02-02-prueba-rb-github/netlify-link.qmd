---
title: "Enlazar Github con Netlify para publicar"
description: "Preparación del vínculo entre Github y Netlify para publicación en automático"

author:
  - name: [Miguel Equihua]
    url: https://www.ie-gamma.net
date: 3/jul/2024
categories: [usethis, github, netlify]

image: img/En caso de incendio.png

format: 
  html:
    toc: true
  pdf: default
lightbox: true
---


## Preparación

Supondré que ya has obtenido tus cuentas de _Github_ y _Netlify_. En todo caso y por si las dudas estos dos enlaces te deben ayudar.

::: {.callout-tip collapse="true"}
## Enlaces para registro en Github y Netlify
[Github](https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F&source=header-home)

[Netlify](https://www.netlify.com/)
:::

::: {layout="[1,1]"}

Ya tenemos un proyecto _Quarto_ en _Rstudio_, al que podemos agregar la funcionalidad de control de versiones mediante _Git_. Por otro lado, también podemos iniciar un nuevo proyecto que desde un inicio tenga esta característica, la [forma e hacerlo está aquí](primeros-pasos.qmd). Si prefieres el camino de agregar _Git_ a tu proyecto ya existente habrá que habilitarlo. Para saber si está _Git_ habilitado basta con averiguar si tienes la pestaña respectiva en el cuadrante de _ambiente de trabajo_ de _RStudio_ (arriba a la izquierda normalmente)

![](img/cuadrante-ambiente.png)
:::




::: {.callout-tip collapse="true"}
## Agregar control de versiones a tu proyecto

### Camino A: usando el menu

![](img/agregar-git-proyecto.png)
\
\

Es muy probable que por este camino tengas una rama principal llamada _master_. Aunque no hay ningún inconveniente con esto, actualmente se prefiere usar como rama principal una llamada _main_. Si esto es lo que prefieres tu también puedes usar el siguiente comando desde la pestaña de consola.

```r

usethis::git_default_branch_rename(from = "master", to = "main")

```

### Camino B: usando comandos

1. Asegúrate de tener instalada la biblioteca `usethis`
2. Ejecuta el siguiente comando en _R_ y responde las preguntas que aparecerán en la consola

```r
usethis::use_git()

```

### Agregar el nuevo repositorio a Github

Lo más sencillo es de nuevo usar la biblioteca de ayuda `usethis`. En la consola ejecuta el siguiente comando

```r

usethis::use_github()

```

Lo que ocurre con este comando es lo siguiente:

1. Crearás un nuevo _repositorio en GitHub_ con el mismo nombre de tu proyecto.
2. Configurarás el nuevo _repo_ como el _origin_ remoto para tu _repo_ local.
3. Prepararás una rama local inicial a la que nombrarás **main** y sobre la que se harás el seguimiento hasta nueva orden. 
4. Sincronizarás lo que tengas en tu máquina con _Github_.
4. Abrirás el nuevo repositorio en el navegador para que puedas ver lo que has hecho.

Casi tan simple como lo que acabamos de hacer es utilizar _Google Desktop_ para crear un _repo_ en tu cuenta, con base en un proyecto de tu máquina. Asegúrate de hacer las tareas 3 y 4 anotadas arriba.

![](img/github-desktop.png)

Un último paso sólo para asegurar uun poco más tu espacio de trabajo y colaboración es recurrir al comando siguiente.

```r
usethis::git_vaccinate()

```
Con esta instrucción se revisa el archivo `.gitignore` global que especifica lo que no conviene, se quiere o debe compartir (claves confidenciales por ejemplo), en un espacio abierto.

De ahora en adelante puedes tomar registro de tu avance de trabajo, involucrando todos los directorios de tu proyecto (salvo los que estén en `.gitignore`), cada vez que lo consideres conveniente (al dar por terminada una tarea propuesta, por ejemplo). También podrás sincronizar este registro con el repositorio que has creado en _Github_ cuando te parezca prudente. Toma nota de que nada de esto ocurrirá automáticamente, deberás generar la indicación cada vez que quieras que ocurra.

La rutina de operación con _Git_ se ilustra en la siguiente figura.

![](img/En caso de incendio.png){width=40%}

:::

## Preparar Github para interactuar con Netlify

Hay que preparar a _Github_ dando acceso a _Netlify_ para que tome lo necesario. La meta es que construya un sitio Web con tu contenido y lo publique en Internet. Los pasos que hay que seguir para esta primera interacción son los siguiente.


Iniciar la vinculación con Github seleccionando la opción que ofrece importar los documentos desde un _repo_ Git. Esto dará la opción de utilizar _Github_ como origen de datos, entre otras posibilidades.

![](img/Netlify-1.png)

El Siguiente paso es autorizar a Netlify a acceder a Github a través de tu cuenta, así como los específicos del repositorio que te interesa vincular. Esto también implica instalar una **aplicación** de vínculo entre _Netlify_ y _Github_ dentro de tu cuenta.   

![](img/Netlify-2.png)

Si todo ocurrió sin problemas, tendrás ahora en _Github_, en el menú de aplicaciones (Avatar&rarr; Settings&rarr; Applications), un botón que te permitirá configurar el vínculo con _Netlify_ según tus requerimientos. También podrás ver los _repos_ que hayas autorizado desde _Netlify_.

## Creación de un nuevo sitio a publicar

1. **En Netlify**:

   + Desde la opción _team_ o _site_ puedes generar un nuevo sitio.
   
::: {layout="[1,1]"}
   ![](img/Netlify-new-site.png)
   
   ![](img/Netlify-new-site-team.png)
:::   

Cuando aprietas el boton de _añadir sitio_, aparecerá una nueva pantalla que tiene tres secciones. Se trata de los atributos que tendrás que proporcionar para darle presencia en Internet a tu proyecto y algunos otros atributos que definen como se producirá y actualizará continuamente. Estas operaciones es poco probable que las vuelvas a ver, una vez que tu proyecto esté en producción, aunque desde luego estarán siempre ahí por si deseas hacer ajustes.  


#### ¿Qué nombre le daras?

Deberás elegir un nombre que se convertirá en una URL para acceder a tu proyecto. Puede ser cualquier cosa que desees, pero debe ser único. En esta sección puedes escribir nombres y verificar que estén disponibles

![](img/Netlify-config-site-1.png)

#### ¿Qué hará Netlify para operar tu sitio?

Es una colección de atributos para indicarle a _Netlify_ dónde conseguir los documentos y como manejarlos. En nuestro caso, muy simple, básicamente hay que decirle en donde están los documentos que _Quarto_, con ayuda de _pandoc_, ha _renderizado_. Si no has cambiado nada en `_quarto.yml` la rama que estamos usando aquí para que _Git_ los registre es **main** y, en ella el directorio de producción se llama **_site**. Por favor verifica el contenido de esto para ayudarte a comprender mejor lo que estás haciendo.

![](img/Netlify-config-site-2.png)

#### ¿Todo listo? ¡a prodcción!

En nuestro caso no hay más que hacer, _Netlify_ tiene información suficiente para encargarse de publicar tu proyecto continuamente. Incorporará los cambios que hagas en _RStudio_ en la rama principal. Lo hará automáticamente cada vez que envíes tus cambios a _Github_. 

![](img/Netlify-config-site-3.png)

Si todo salió bien, en este momento ya debe estar tu proyecto publicado y accesible para cualquier lector del mundo que lo localice y se interese en su contenido. 



