{
  "hash": "50c95d7ffc3b4a63c90240a563cd5136",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Acceso a Datos\"\nauthor: \"Miguel Equihua\"\ndate: 9/jul/2024\n\nlang: es\ncategories: [datos, datos abiertos, API]\n\nimage: magnifying-glass-541626_1280.jpg\n\nlightbox: true\n---\n\n\n\n\n\n\n\n\n\n\n## Obtención de Datos\n\nLas fuentes de datos, especialmente hoy, pueden ser muy variadas. Desde los datos que conseguimos directamente en campo a partir de mediciones directas o encuestas, hasta los datos que podemos obtener de _fuentes de datos abiertos_. Considero que será de tu interés explorar las distintas formas de interacción que las fuentes de datos implican para nuestros procesos de producción _científica reproducible_.\n\n### Manejo de claves confidenciales\n\nUn tema importante a cuidar es preservar la confidencialidad de claves, **tokens** y otras formas de identificación personal que puede implicar el proceso de acceso a datos en línea. Así que veremos eso como primer asunto. Queda claro que debemos evitar por todos los medios evitar poner esa información en carpetas o código que pueden acabar siendo registradas en Github en nuestro repositorio público. Haberte vacunado con `usethis::git_vaccinate()` ayuda en gran medida, pero desde luego no es remplazo a estar atentos a lo que estamos haciendo. La estrategia de registro de datos confidenciales que te propongo es la biblioteca `keyring`. Esta biblioteca accede al sistema de almacenamiento de credenciales de tu máquina desde _R_. La describen como una **API** _Independiente de la Plataforma_ para acceder al depósito de credenciales del sistema operativo de tu máquina. [Este sitio explica que es una API (Application Programming Interface)](https://aws.amazon.com/es/what-is/api/). Actualmente `keyring` soporta:  **Keychain** en _macOS_, **Credential Store** wn _Windows_, **the Secret Service API** en _Linux_, soluciones simples (sin plataforma específica) desarrollados con variables de sistema o archivos encristalados e incluso ofrece la posibilidad de desarrollar algunas soluciones propias con sencillez. En nuestro caso, básicamente usaremos dos funciones de esta biblioteca. Primero y desde la pantalla de **Consola** ejecuta:\n\\\n\n```r\nkey_set(service = \"[dale un nombre]\", username = \"[el que desees]\")\n```\n\\\n\nEsto hará el registro de tus credenciales en tu máquina, fuera de la vista. A partir de ese momento y mientras no elimines el registro explícitamente, estarán disponibles los datos que hayas registrado y los podrás obtener con: \n\\\n\n```r\nkey_ger(service = \"[dale un nombre]\", username = \"[el que desees]\")\n\n```\n\\\n\nEsta última línea recupera los datos confidenciales, así que deberás cuidar usar las credenciales de inmediato y procurar no guardarlas y menos desplegarlas o habilitar medios para mostrarlas, durante el proceso.\n\nVeamos un primer ejemplo con **INEGI**. Te sugiero ir a [https://www.inegi.org.mx/servicios/api_indicadores.html](https://www.inegi.org.mx/servicios/api_indicadores.html), en donde **INEGI** nos muestra un ejemplo de como acceder a los datos abiertos que _compilan_, _mantienen_ y _custodian_. Deberás obtener un **token** personal, el mismo sitio de **INEGI** te dirá como obtenerlo. El ejemplo muestra como obtener datos de la **serie histórica** del indicador de la **Población total** de los Estados Unidos Mexicanos, en idioma español, en formato _JSON_. Una vez que los obtengamos calcularemos el promedio.\n\nLo primero que haremos es preparar el acceso a los datos con el **token** confidencial y obtenemos los datos, sin haber registrado la _URL_ de acceso, pues como viste arriba, incluye tu **token**, así que habrá que manejarla con seguridad. El resultado de este _código_ es una estruuctra de datos que ya no contiene información confidencial.\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(rjson)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'rjson'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:jsonlite':\n\n    fromJSON, toJSON\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(keyring)\nlibrary(stringr)\nsuppressWarnings(suppressMessages(library(tidyverse)))\n\n# Llamado al API de INEGI\nurl <-\"https://www.inegi.org.mx/app/api/indicadores/desarrolladores/jsonxml/INDICATOR/1002000001/es/00000/false/BISE/2.0/[Aquí va tu Token]?type=json\"\n\n# Obtiene los datos (usa los datos confidenciales sin mostrarlos ni guardarlos)\ndatosGenerales <- content(GET(str_replace(url,\n                                          \"\\\\[Aquí va tu Token\\\\]\",\n                                          key_get(service = \"inegi_api\",\n                                                  username = \"miguel_inegi\")))\n                          , \"text\")\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\nLa siguiente tarea que haremos ahora es simplemente arreglar los datos y ponerlos de la maera que requiero. Los datos son actualmente una base de datos _jason_, que es una estructura parecida a un diccionario que tiene una etiqueta seguida de los datos que le corresponden.\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprettify(datosGenerales)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n{\n    \"Header\": {\n        \"Name\": \"Datos compactos BISE\",\n        \"Email\": \"atencion.usuarios@inegi.org.mx\"\n    },\n    \"Series\": [\n        {\n            \"INDICADOR\": \"1002000001\",\n            \"FREQ\": \"7\",\n            \"TOPIC\": \"123\",\n            \"UNIT\": \"96\",\n            \"UNIT_MULT\": \"\",\n            \"NOTE\": \"1398\",\n            \"SOURCE\": \"2,3,343,487,781,1668,1669,1670,1671,1672,1677,1678,1679,1714,3001\",\n            \"LASTUPDATE\": \"24/01/2021 12:00:00 a. m.\",\n            \"STATUS\": null,\n            \"OBSERVATIONS\": [\n                {\n                    \"TIME_PERIOD\": \"1910\",\n                    \"OBS_VALUE\": \"15160369.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"1921\",\n                    \"OBS_VALUE\": \"14334780.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"1930\",\n                    \"OBS_VALUE\": \"16552722.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"1940\",\n                    \"OBS_VALUE\": \"19653552.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"1950\",\n                    \"OBS_VALUE\": \"25791017.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"1960\",\n                    \"OBS_VALUE\": \"34923129.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"1970\",\n                    \"OBS_VALUE\": \"48225238.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"1980\",\n                    \"OBS_VALUE\": \"66846833.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"1990\",\n                    \"OBS_VALUE\": \"81249645.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"1995\",\n                    \"OBS_VALUE\": \"91158290.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"422,425\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"2000\",\n                    \"OBS_VALUE\": \"97483412.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"9,425\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"2005\",\n                    \"OBS_VALUE\": \"103263388.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"49,425\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"2010\",\n                    \"OBS_VALUE\": \"112336538.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"115,425\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"2015\",\n                    \"OBS_VALUE\": \"119938473.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"8230\",\n                    \"COBER_GEO\": \"0700\"\n                },\n                {\n                    \"TIME_PERIOD\": \"2020\",\n                    \"OBS_VALUE\": \"126014024.00000000000000000000\",\n                    \"OBS_EXCEPTION\": null,\n                    \"OBS_STATUS\": \"3\",\n                    \"OBS_SOURCE\": \"\",\n                    \"OBS_NOTE\": \"\",\n                    \"COBER_GEO\": \"0700\"\n                }\n            ]\n        }\n    ]\n}\n \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflujoDatos <- paste(datosGenerales, collapse = \" \")\n\n#Obtención de la lista de observaciones \nflujoDatos <- fromJSON(flujoDatos)\nflujoDatos <- flujoDatos$Series\nflujoDatos <- flujoDatos[[1]]$OBSERVATIONS\n\n#Generación del promedio de la lista de observaciones \ndatos<-0;\nfor (i in 1:length(flujoDatos))\n{\n datos[i]<-flujoDatos[[i]]$OBS_VALUE\n}\n\ndatos<-as.numeric(datos)\nprint(mean(datos))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 64862094\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}